<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>ctf on Olist.213</title>
    <link>https://olist213.github.io/tags/ctf/</link>
    <description>Recent content in ctf on Olist.213</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <lastBuildDate>Thu, 13 Apr 2023 10:37:34 +0800</lastBuildDate><atom:link href="https://olist213.github.io/tags/ctf/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>CTFd资源收集</title>
      <link>https://olist213.github.io/posts/ctfd_resource/</link>
      <pubDate>Thu, 13 Apr 2023 10:37:34 +0800</pubDate>
      
      <guid>https://olist213.github.io/posts/ctfd_resource/</guid>
      <description> 插件   分数面板插件
 ctfd-matrix-scoreboard https://github.com/itszn/ctfd-matrix-scoreboard-plugin    题目分类主题
 ctfd-pages-theme    多选题
  ctfd-plugin-multichoice
  选择题插件（官方版本）
    前三血插件
  qqbot分数播报
  CTFd动态靶机自动搭建脚本  https://github.com/pwnthebox/ctfd-auto-deploy  动态flag  CTFd-Whale  汉化  CTFd_chinese_CN  主题   CTFd中文主题，高仿buuoj.cn以及ctf.hzyxxl.com
  Pixo Theme
  learning官方主题
 下载    Car Hacking Village
  参考  https://www.yuque.com/dat0u/ctfd/sm2tt0  </description>
    </item>
    
    <item>
      <title>Ctfd分类分页设置</title>
      <link>https://olist213.github.io/posts/ctfd_pages_theme_setting/</link>
      <pubDate>Thu, 13 Apr 2023 10:05:11 +0800</pubDate>
      
      <guid>https://olist213.github.io/posts/ctfd_pages_theme_setting/</guid>
      <description>搭建了ctfd的朋友可能都知道，ctfd中如果题目多起来了，就会在一个页面中显示所有的题目，这个时候就需要一个分类分页插件，从互联网上搜索之后，发现有一个有一个项目可以满足要求，效果类似于ctfshow、buuoj。
项目地址：https://github.com/frankli0324/ctfd-pages-theme
看了一下，这个项目很多人都npm报错，我也尝试了好几次，也是npm报错，那些报错我也不知道是什么意思，虽然报错了，但是可以不管报错，同样可以达到需要的效果。
这里就写下搭建的一个流程，我是直接在ctfd-pages-theme的基础上修改的core目录下的文件，只需要替换掉两个文件即可。
1、CTFd/themes/core/assets/js/pages/challenges.js
2、CTFd/themes/core/templates/challenges.html
如果你是直接修改的core目录下的challenges.*文件的话，ctfd-pages-theme项目说的将webpack.config.js替换为仓库中的webpack.config.js 然后利用npm构建可以忽略，直接使用原先的webpack.config.js文件即可。
前置工作好了之后，就可以开始通过npm构建了。
1、安装npm
sudo apt install npm 2、安装完npm之后，设置npm源
npm config set registry https://registry.npm.taobao.org 3、构建
npm i &amp;amp;&amp;amp; npm run build 4、如果构建报错如下，说明npm构建有问题
但是如果报错信息上面还有绿字信息。
说明pages分类页面可以使用了，为什么报错呢？看了下，可能和admin theme主题有关，但这个消息可以忽略。
5、最后一步，就是重新docker-compose和重启ctfd容器。
sudo docker-compose up -d sudo docker restart 13d 效果如下：
end&amp;hellip;</description>
    </item>
    
    <item>
      <title>Ctfd_env_setting</title>
      <link>https://olist213.github.io/posts/ctfd_env_setting/</link>
      <pubDate>Thu, 30 Mar 2023 09:14:22 +0800</pubDate>
      
      <guid>https://olist213.github.io/posts/ctfd_env_setting/</guid>
      <description>ctfd汉化 导入文件到ctfd目录下即可
项目地址：GitHub - Gu-f/CTFd_chinese_CN: 对CTFd平台各版本的汉化记录。key:中文、汉化、翻译、chinese、CN、CTFd
汉化版已推送到hub docker中。
docker pull liangchenga/ctfd-341_ctfd:latest 支持动态flag的ctfd  大佬已经搭建好的vmware版本：VMware虚拟机版本  直接用别人做好的虚拟机搭建，自己搭建起来有点麻烦，这里会记录一些使用过程中的问题及使用心得。
 这里也有一个自动搭建ctfd的脚本，用到的是nip.io的域名。  项目地址：GitHub - pwnthebox/ctfd-auto-deploy
sh &amp;lt;(curl -s https://raw.githubusercontent.com/pwnthebox/ctfd-auto-deploy/master/install.sh) 需要手动输入的值得
Http Domain Suffix ：域名/ip
External Http Port : 靶机http映射端口 (这里不能写80，因为80给了ctfd)
Direct Minimum/Maximum Port : 靶机端口开放范围
 通过这篇文章搭建，简单易懂。2022.12.31  https://mp.weixin.qq.com/s/oMI9h_hBc373poVsR2CiVw
项目地址：
GitHub - Un1kTeam/CTFd: CTFs as you need them
此项目版本是3.3.0，可以进行汉化，同时也包括了frp、ctfd-whale @ 138b042，ctf-whale单独下载安装。
ctfd环境测试 打开浏览器，输入http://127.0.0.1:9124访问，返回如下界面：
一步一步设置完，在样式处，banner如果尺寸太大有点问题，设置完成后，就可以使用了。
动态靶场配置，点击Whale插件
没有域名Http Domain Suffix可以不填写
Direct IP Address 填写虚拟机的ip地址。
创建题目 选择dynamic_docker</description>
    </item>
    
  </channel>
</rss>
